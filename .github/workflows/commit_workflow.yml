name: Commit Workflow

on:
  push:
    branches:
      - '*'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Run Tests
        run: |
          mvn test jacoco:report
        working-directory: ${{ github.workspace }}

      - name: Check If All Tests Pass
        run: |
          if [ $? -eq 0 ]; then
            echo "All tests passed successfully."
          else
            echo "Tests failed."
            exit 1  # Exit with an error code to stop the workflow
          fi

      - name: Save Geoweaver JaCoCo HTML Report
        uses: actions/upload-artifact@v2
        with:
          name: geoweaver-jacoco-coverage-report
          path: target/site/jacoco

  test-mysql:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: geoweaver
          MYSQL_DATABASE: geoweaver
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64

    - name: Create geoweaver directory and application.properties
      run: |
        mkdir -p ~/geoweaver
        echo "spring.datasource.url=jdbc:mysql://localhost:3306/geoweaver" >> ~/geoweaver/application.properties
        echo "spring.datasource.username=root" >> ~/geoweaver/application.properties
        echo "spring.datasource.password=geoweaver" >> ~/geoweaver/application.properties
        echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> ~/geoweaver/application.properties
        echo "spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect" >> ~/geoweaver/application.properties

    - name: Run Tests
      run: |
        mvn test jacoco:report
      working-directory: ${{ github.workspace }}

    - name: Check If All Tests Pass
      run: |
        if [ $? -eq 0 ]; then
          echo "All tests passed successfully."
        else
          echo "Tests failed."
          exit 1  # Exit with an error code to stop the workflow
        fi

    - name: Save Geoweaver JaCoCo HTML Report
      uses: actions/upload-artifact@v2
      with:
        name: geoweaver-jacoco-coverage-report
        path: target/site/jacoco

  test-postgresql:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: geoweaver
          POSTGRES_DB: geoweaver
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64

    - name: Create geoweaver directory and application.properties
      run: |
        mkdir -p ~/geoweaver
        echo "spring.datasource.url=jdbc:postgresql://localhost:5432/geoweaver" >> ~/geoweaver/application.properties
        echo "spring.datasource.username=postgres" >> ~/geoweaver/application.properties
        echo "spring.datasource.password=geoweaver" >> ~/geoweaver/application.properties
        echo "spring.datasource.driver-class-name=org.postgresql.Driver" >> ~/geoweaver/application.properties
        echo "spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect" >> ~/geoweaver/application.properties

    - name: Run Tests
      run: |
        mvn test jacoco:report
      working-directory: ${{ github.workspace }}

    - name: Check If All Tests Pass
      run: |
        if [ $? -eq 0 ]; then
          echo "All tests passed successfully."
        else
          echo "Tests failed."
          exit 1  # Exit with an error code to stop the workflow
        fi

    - name: Save Geoweaver JaCoCo HTML Report
      uses: actions/upload-artifact@v2
      with:
        name: geoweaver-jacoco-coverage-report
        path: target/site/jacoco

  build-jar:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Install XML parsing tools
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Extract version from pom.xml
        run: |
          VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" $GITHUB_WORKSPACE/pom.xml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Append version to DEBIAN/control
        run: |
          echo "Version: ${{ env.VERSION }}" >> $GITHUB_WORKSPACE/linux-deployment/DEBIAN/control

      - name: Set execute permissions for postinst script
        run: chmod 755 $GITHUB_WORKSPACE/linux-deployment/DEBIAN/postinst

      - name: Copy geoweaver.jar to linux-deployment directory
        run: cp $GITHUB_WORKSPACE/target/geoweaver.jar $GITHUB_WORKSPACE/linux-deployment/usr/local/bin/

      - name: Make geoweaver.sh executable
        run: chmod +x $GITHUB_WORKSPACE/linux-deployment/usr/local/bin/geoweaver.sh

      - name: Build deb package
        run: |
          cd $GITHUB_WORKSPACE/linux-deployment
          dpkg-deb --build . geoweaver.deb

      - name: Upload Geoweaver Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: geoweaver-artifacts
          path: |
            target/*.jar
            pom.xml
            linux-deployment/*.deb
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: geoweaver
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: geoweaver/geoweaver:${{ env.VERSION }}, geoweaver/geoweaver:latest

      - name: Logout from Docker
        if: always()
        run: docker logout     

  build-macos:
    needs: build-jar
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Geoweaver Artifacts
        uses: actions/download-artifact@v2
        with:
          name: geoweaver-artifacts

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build .app file
        run: |
          chmod +x ${GITHUB_WORKSPACE}/macos-deployment/make-app.sh
          ${GITHUB_WORKSPACE}/macos-deployment/make-app.sh

      - name: Create .dmg file with Applications shortcut
        run: |
          APP_NAME="Geoweaver"
          DMG_TEMP_DIR="${GITHUB_WORKSPACE}/dmg_temp"
          mkdir -p "${DMG_TEMP_DIR}"
          cp -r "${GITHUB_WORKSPACE}/geoweaver.app" "${DMG_TEMP_DIR}"
          ln -s /Applications "${DMG_TEMP_DIR}/Applications"
          df -h
          lsblk
          hdiutil create -volname "$APP_NAME" -srcfolder "${DMG_TEMP_DIR}" -ov -format UDZO "${GITHUB_WORKSPACE}/${APP_NAME}.dmg"
      - name: Upload .dmg file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: geoweaver-dmg
          path: /Users/runner/work/Geoweaver/Geoweaver/Geoweaver.dmg

